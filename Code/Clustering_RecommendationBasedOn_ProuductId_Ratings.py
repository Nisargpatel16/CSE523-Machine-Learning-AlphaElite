# -*- coding: utf-8 -*-
"""Clustering_RecommendationBasedOn_ProuductId_Ratings.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BT1_AU74feUWOJD9FFttCrwgfOtzZJ-S
"""

# Commented out IPython magic to ensure Python compatibility.
from sklearn.cluster import KMeans #K-Means clustering.
import pandas as pd #Package with multiple methods of data filtering.
from sklearn.preprocessing import MinMaxScaler #Transform features by scaling each feature to a given range.

from matplotlib import pyplot as plt #For plottting data in multiple ways
#To render a figure in a notebook
# %matplotlib inline

X = pd.read_csv('/content/drive/MyDrive/ML DataSet/Updated_product_des.csv') #Read dataset
X1 = X.head(150) #Store top 150 rows of the dataset
X1 #Print

X2 = X1[["Product_Id","Ratings"]]#Assign matrix to X2 containing just Prouduct Id and Ratings.
X2

plt.scatter(X2['Product_Id'],X2['Ratings']) #Plots ratings vs ProductId

km = KMeans(n_clusters=5) #CLusters of 5 because we have ratings out of 5.
km

y = km.fit_predict(X2[['Ratings']]) #Assign values in array form based on ratings.
y

X2['cluster'] = y #Adds a column named 'cluster'

Data1=X2[["Product_Id","Ratings","cluster"]] #Storing X2 in series named Data1
Data1 #To display

# Assign values to variable Y based on the cluster.
Y1=X2[X2.cluster==0]
Y2=X2[X2.cluster==1]
Y3=X2[X2.cluster==2]
Y4=X2[X2.cluster==3]
Y5=X2[X2.cluster==4]

#Assigns a particular color to each cluster.
plt.scatter(Y1.Product_Id,Y1['Ratings'], color='green')
plt.scatter(Y2.Product_Id,Y2['Ratings'], color='red')
plt.scatter(Y3.Product_Id,Y3['Ratings'], color='blue')
plt.scatter(Y4.Product_Id,Y4['Ratings'], color='purple')
plt.scatter(Y5.Product_Id,Y5['Ratings'], color='orange')

#Plot
plt.xlabel('Product Id')
plt.ylabel('Ratings')
plt.legend()

#User-Built function that displays similar products based on user input 
def show_recommendations(id):
  out1 = X2.query("Product_Id == @id")
  final = out1.Ratings
  out2 = X2.loc[X2['Ratings'].isin(final)]
  return out2[["Product_Id","Ratings"]]

show_recommendations("B000179R3I")
